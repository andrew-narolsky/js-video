{"version":3,"sources":["script.js"],"names":["FindVideos","this","init","prototype","i","$videos","document","querySelectorAll","hasOwnProperty","setupVideo","$video","_this","$link","querySelector","$media","$button","id","parseMediaURL","addEventListener","$iframe","createIframe","remove","appendChild","removeAttribute","classList","add","src","match","createElement","setAttribute","generateURL"],"mappings":"aAqGA,IAAMA,WAAa,WACfC,KAAKC,QAGTF,WAAWG,UAAUD,KAAO,WACxB,IACSE,EADLC,EAAUC,SAASC,iBAAiB,oBACxC,IAASH,KAAKC,EACNA,EAAQG,eAAeJ,IACvBH,KAAKQ,WAAWJ,EAAQD,KAKpCJ,WAAWG,UAAUM,WAAa,SAASC,GAAQ,IAAAC,EAAAV,KAC3CW,EAAQF,EAAOG,cAAc,gBAC7BC,EAASJ,EAAOG,cAAc,iBAC9BE,EAAUL,EAAOG,cAAc,kBAC/BG,EAAKf,KAAKgB,cAAcH,GAC5BJ,EAAOQ,iBAAiB,QAAS,WAC7B,IAAIC,EAAUR,EAAKS,aAAaJ,GAChCJ,EAAMS,SACNN,EAAQM,SACRX,EAAOY,YAAYH,KAEvBP,EAAMW,gBAAgB,QACtBb,EAAOc,UAAUC,IAAI,mBAGzBzB,WAAWG,UAAUc,cAAgB,SAASH,GAI1C,OAFUA,EAAOY,IACDC,MAFH,sEAGA,IAGjB3B,WAAWG,UAAUiB,aAAe,SAASJ,GACzC,IAAIG,EAAUb,SAASsB,cAAc,UAKrC,OAJAT,EAAQU,aAAa,kBAAmB,IACxCV,EAAQU,aAAa,QAAS,YAC9BV,EAAQU,aAAa,MAAO5B,KAAK6B,YAAYd,IAC7CG,EAAQK,UAAUC,IAAI,gBACfN,GAGXnB,WAAWG,UAAU2B,YAAc,SAASd,GAExC,MAAO,iCAAmCA,EAD9B","file":"script.min.js","sourcesContent":["// class FindVideos\n// {\n//     constructor()\n//     {\n//         let $videos = document.querySelectorAll('.view-block-wrap');\n//         for (let i in $videos) {\n//             if ($videos.hasOwnProperty(i)) {\n//                 this.setupVideo($videos[i]);\n//             }\n//         }\n//     }\n//\n//     setupVideo($video)\n//     {\n//         let $link = $video.querySelector('.video__link');\n//         let $media = $video.querySelector('.video__media');\n//         let $button = $video.querySelector('.video__button');\n//         let id = this.parseMediaURL($media);\n//         $video.addEventListener('click', () => {\n//             let $iframe = this.createIframe(id);\n//             $link.remove();\n//             $button.remove();\n//             $video.appendChild($iframe);\n//         });\n//         $link.removeAttribute('href');\n//         $video.classList.add('video--enabled');\n//     }\n//\n//     parseMediaURL($media)\n//     {\n//         let regexp = /https:\\/\\/i\\.ytimg\\.com\\/vi\\/([a-zA-Z0-9_-]+)\\/maxresdefault\\.jpg/i;\n//         let url = $media.src;\n//         let match = url.match(regexp);\n//         return match[1];\n//     }\n//\n//     createIframe(id)\n//     {\n//         let $iframe = document.createElement('iframe');\n//         $iframe.setAttribute('allowfullscreen', '');\n//         $iframe.setAttribute('allow', 'autoplay');\n//         $iframe.setAttribute('src', this.generateURL(id));\n//         $iframe.classList.add('video__media');\n//         return $iframe;\n//     }\n//\n//     generateURL(id)\n//     {\n//         let query = '?rel=0&showinfo=0&autoplay=1';\n//         return 'https://www.youtube.com/embed/' + id + query;\n//     }\n// }\n\n// const FindVideos = function() {\n//\n//     this.init = function() {\n//         let $videos = document.querySelectorAll('.view-block-wrap');\n//         for (let i in $videos) {\n//             if ($videos.hasOwnProperty(i)) {\n//                 this.setupVideo($videos[i]);\n//             }\n//         }\n//     }\n//\n//     this.setupVideo = function($video) {\n//         let $link = $video.querySelector('.video__link');\n//         let $media = $video.querySelector('.video__media');\n//         let $button = $video.querySelector('.video__button');\n//         let id = this.parseMediaURL($media);\n//         $video.addEventListener('click', () => {\n//             let $iframe = this.createIframe(id);\n//             $link.remove();\n//             $button.remove();\n//             $video.appendChild($iframe);\n//         });\n//         $link.removeAttribute('href');\n//         $video.classList.add('video--enabled');\n//     }\n//\n//     this.parseMediaURL = function($media) {\n//         let regexp = /https:\\/\\/i\\.ytimg\\.com\\/vi\\/([a-zA-Z0-9_-]+)\\/maxresdefault\\.jpg/i;\n//         let url = $media.src;\n//         let match = url.match(regexp);\n//         return match[1];\n//     }\n//\n//     this.createIframe = function(id) {\n//         let $iframe = document.createElement('iframe');\n//         $iframe.setAttribute('allowfullscreen', '');\n//         $iframe.setAttribute('allow', 'autoplay');\n//         $iframe.setAttribute('src', this.generateURL(id));\n//         $iframe.classList.add('video__media');\n//         return $iframe;\n//     }\n//\n//     this.generateURL = function(id) {\n//         let query = '?rel=0&showinfo=0&autoplay=1';\n//         return 'https://www.youtube.com/embed/' + id + query;\n//     }\n// }\n\nconst FindVideos = function() {\n    this.init();\n}\n\nFindVideos.prototype.init = function() {\n    let $videos = document.querySelectorAll('.view-block-wrap');\n    for (let i in $videos) {\n        if ($videos.hasOwnProperty(i)) {\n            this.setupVideo($videos[i]);\n        }\n    }\n}\n\nFindVideos.prototype.setupVideo = function($video) {\n    let $link = $video.querySelector('.video__link');\n    let $media = $video.querySelector('.video__media');\n    let $button = $video.querySelector('.video__button');\n    let id = this.parseMediaURL($media);\n    $video.addEventListener('click', () => {\n        let $iframe = this.createIframe(id);\n        $link.remove();\n        $button.remove();\n        $video.appendChild($iframe);\n    });\n    $link.removeAttribute('href');\n    $video.classList.add('video--enabled');\n}\n\nFindVideos.prototype.parseMediaURL = function($media) {\n    let regexp = /https:\\/\\/i\\.ytimg\\.com\\/vi\\/([a-zA-Z0-9_-]+)\\/maxresdefault\\.jpg/i;\n    let url = $media.src;\n    let match = url.match(regexp);\n    return match[1];\n}\n\nFindVideos.prototype.createIframe = function(id) {\n    let $iframe = document.createElement('iframe');\n    $iframe.setAttribute('allowfullscreen', '');\n    $iframe.setAttribute('allow', 'autoplay');\n    $iframe.setAttribute('src', this.generateURL(id));\n    $iframe.classList.add('video__media');\n    return $iframe;\n}\n\nFindVideos.prototype.generateURL = function(id) {\n    let query = '?rel=0&showinfo=0&autoplay=1';\n    return 'https://www.youtube.com/embed/' + id + query;\n}\n"]}