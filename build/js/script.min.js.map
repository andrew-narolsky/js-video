{"version":3,"sources":["script.js"],"names":["FindVideos","this","init","prototype","i","$videos","document","querySelectorAll","hasOwnProperty","setupVideo","$video","$link","querySelector","$media","$button","id","parseMediaURL","addEventListener","$iframe","createIframe","remove","appendChild","removeAttribute","classList","add","src","match","createElement","setAttribute","generateURL"],"mappings":"aAAA,IAAMA,WAAa,WACfC,KAAKC,QAGTF,WAAWG,UAAUD,KAAO,WACxB,IACSE,EADLC,EAAUC,SAASC,iBAAiB,oBACxC,IAASH,KAAKC,EACNA,EAAQG,eAAeJ,IACvBH,KAAKQ,WAAWJ,EAAQD,KAKpCJ,WAAWG,UAAUM,WAAa,SAAUC,GACxC,IAAIC,EAAQD,EAAOE,cAAc,gBAC7BC,EAASH,EAAOE,cAAc,iBAC9BE,EAAUJ,EAAOE,cAAc,kBAC/BG,EAAKd,KAAKe,cAAcH,GAC5BH,EAAOO,iBAAiB,QAAS,WAC7B,IAAIC,EAAUlB,WAAWG,UAAUgB,aAAaJ,GAChDJ,EAAMS,SACNN,EAAQM,SACRV,EAAOW,YAAYH,KAEvBP,EAAMW,gBAAgB,QACtBZ,EAAOa,UAAUC,IAAI,mBAGzBxB,WAAWG,UAAUa,cAAgB,SAAUH,GAI3C,OAFUA,EAAOY,IACDC,MAFH,sEAGA,IAGjB1B,WAAWG,UAAUgB,aAAe,SAAUJ,GAC1C,IAAIG,EAAUZ,SAASqB,cAAc,UAKrC,OAJAT,EAAQU,aAAa,kBAAmB,IACxCV,EAAQU,aAAa,QAAS,YAC9BV,EAAQU,aAAa,MAAO3B,KAAK4B,YAAYd,IAC7CG,EAAQK,UAAUC,IAAI,gBACfN,GAGXlB,WAAWG,UAAU0B,YAAc,SAAUd,GAEzC,MAAO,iCAAmCA,EAD9B","file":"script.min.js","sourcesContent":["const FindVideos = function () {\n    this.init();\n}\n\nFindVideos.prototype.init = function () {\n    let $videos = document.querySelectorAll('.view-block-wrap');\n    for (let i in $videos) {\n        if ($videos.hasOwnProperty(i)) {\n            this.setupVideo($videos[i]);\n        }\n    }\n}\n\nFindVideos.prototype.setupVideo = function ($video) {\n    let $link = $video.querySelector('.video__link');\n    let $media = $video.querySelector('.video__media');\n    let $button = $video.querySelector('.video__button');\n    let id = this.parseMediaURL($media);\n    $video.addEventListener('click', function () {\n        let $iframe = FindVideos.prototype.createIframe(id);\n        $link.remove();\n        $button.remove();\n        $video.appendChild($iframe);\n    });\n    $link.removeAttribute('href');\n    $video.classList.add('video--enabled');\n}\n\nFindVideos.prototype.parseMediaURL = function ($media) {\n    let regexp = /https:\\/\\/i\\.ytimg\\.com\\/vi\\/([a-zA-Z0-9_-]+)\\/maxresdefault\\.jpg/i;\n    let url = $media.src;\n    let match = url.match(regexp);\n    return match[1];\n}\n\nFindVideos.prototype.createIframe = function (id) {\n    let $iframe = document.createElement('iframe');\n    $iframe.setAttribute('allowfullscreen', '');\n    $iframe.setAttribute('allow', 'autoplay');\n    $iframe.setAttribute('src', this.generateURL(id));\n    $iframe.classList.add('video__media');\n    return $iframe;\n}\n\nFindVideos.prototype.generateURL = function (id) {\n    let query = '?rel=0&showinfo=0&autoplay=1';\n    return 'https://www.youtube.com/embed/' + id + query;\n}\n"]}